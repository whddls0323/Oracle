/*
    날짜: 2025/07/15
    이름: 윤종인
    내용: 3장 SQL 고급
*/

CREATE TABLE emp (
    empno NUMBER(4) PRIMARY KEY,
    name VARCHAR2(20) NOT NULL,
    gender CHAR(1) NOT NULL,
    job CHAR(20) NOT NULL,
    depno NUMBER(2),
    regdate DATE NOT NULL
);

CREATE TABLE dept (
    deptno NUMBER(2) PRIMARY KEY,
    dname VARCHAR2(20) NOT NULL,
    dtel VARCHAR2(12) NOT NULL
);
CREATE TABLE sale (
    no NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    empno NUMBER(4) NOT NULL,
    year NUMBER(4) NOT NULL,
    month NUMBER(2) NOT NULL,   
    price NUMBER(10)
);

INSERT INTO emp VALUES (1001,'김유신','M','사원',10,SYSDATE);
INSERT INTO emp VALUES (1002,'김춘추','M','대리',20,SYSDATE);
INSERT INTO emp VALUES (1003,'장보고','M','과장',10,SYSDATE);
INSERT INTO emp VALUES (1004,'강감찬','M','부장',30,SYSDATE);
INSERT INTO emp VALUES (1005,'신사임당','F','대리',20,SYSDATE);
INSERT INTO emp VALUES (1006,'이황','M','사원',40,SYSDATE);
INSERT INTO emp VALUES (1007,'이이','M','과장',20,SYSDATE);
INSERT INTO emp VALUES (1008,'이순신','M','사원',NULL,SYSDATE);
INSERT INTO emp VALUES (1009,'허난설헌','F','사원',NULL,SYSDATE);
INSERT INTO emp VALUES (1010,'정약용','M','대리',50,SYSDATE);

INSERT INTO dept (deptno,dname,dtel) VALUES (10,'영업1부','051-511-1000');
INSERT INTO dept (deptno,dname,dtel) VALUES (20,'영업2부','051-511-2000');
INSERT INTO dept (deptno,dname,dtel) VALUES (30,'영업3부','051-511-3000');
INSERT INTO dept (deptno,dname,dtel) VALUES (40,'영업4부','051-511-4000');
INSERT INTO dept (deptno,dname,dtel) VALUES (50,'영업지원부','051-511-5000');

INSERT INTO sale (empno,year,month,price) VALUES (1001,2023,1,98100);
INSERT INTO sale (empno,year,month,price) VALUES (1002,2023,1,136000);
INSERT INTO sale (empno,year,month,price) VALUES (1003,2023,1,80000);
INSERT INTO sale (empno,year,month,price) VALUES (1004,2023,1,78000);
INSERT INTO sale (empno,year,month,price) VALUES (1005,2023,1,NULL);

INSERT INTO sale (empno,year,month,price) VALUES (1001,2023,2,23500);
INSERT INTO sale (empno,year,month,price) VALUES (1002,2023,2,126000);
INSERT INTO sale (empno,year,month,price) VALUES (1003,2023,2,18500);
INSERT INTO sale (empno,year,month,price) VALUES (1005,2023,2,19000);
INSERT INTO sale (empno,year,month,price) VALUES (1010,2023,2,53000);

INSERT INTO sale (empno,year,month,price) VALUES (1001,2024,1,24000);
INSERT INTO sale (empno,year,month,price) VALUES (1002,2024,1,109000);
INSERT INTO sale (empno,year,month,price) VALUES (1003,2024,1,80000);
INSERT INTO sale (empno,year,month,price) VALUES (1004,2024,1,NULL);
INSERT INTO sale (empno,year,month,price) VALUES (1007,2024,1,24000);

INSERT INTO sale (empno,year,month,price) VALUES (1002,2024,2,160000);
INSERT INTO sale (empno,year,month,price) VALUES (1003,2024,2,101000);
INSERT INTO sale (empno,year,month,price) VALUES (1004,2024,2,43000);
INSERT INTO sale (empno,year,month,price) VALUES (1005,2024,2,24000);
INSERT INTO sale (empno,year,month,price) VALUES (1006,2024,2,109000);

--1) WHERE절과 기본 연산자
SELECT * FROM emp WHERE name = '김유신'; --이름이 김유신인 사람의 모든것 출력

SELECT * FROM emp WHERE job = '차장' AND depno = 10;
SELECT * FROM emp WHERE job = '차장' OR depno = 10;

SELECT * FROM emp WHERE name <> '김춘추'; --위아래 서로 같은 기능
SELECT * FROM emp WHERE name != '김춘추';

SELECT * FROM emp WHERE job = '사원' AND depno = 10;
SELECT * FROM emp WHERE job = '사원' OR job = '대리'; --위아래 서로 같은 기능
SELECT * FROM emp WHERE job IN ('사원','대리');

SELECT * FROM emp WHERE depno IN (101,102,103);

SELECT * FROM emp WHERE name LIKE '김%'; --김으로 시작하는
SELECT * FROM emp WHERE name LIKE '%신'; --신으로 끝나는
SELECT * FROM emp WHERE name LIKE '김__'; --김로 시작하는 세 글자
SELECT * FROM emp WHERE name LIKE '이_'; --이로 시작하는 두 글자
SELECT * FROM emp WHERE name LIKE '_순%';
//select * from emp where hp like '010-1111%';

SELECT * FROM emp WHERE depno IS NULL;
SELECT * FROM emp WHERE depno IS NOT NULL;

SELECT * FROM emp WHERE empno >= 1005;

SELECT * FROM dept WHERE deptno = 10;
SELECT * FROM dept WHERE dname = '영업지원부';
SELECT * FROM dept WHERE dtel LIKE '%30%';
SELECT * FROM dept WHERE deptno IN (10,30);
SELECT * FROM dept WHERE dname LIKE '영업__';

SELECT * FROM sale where price > 50000;
SELECT * FROM sale where price >= 50000 and price < 100000 and month = 1;
SELECT * FROM sale where price between 50000 and 100000;
SELECT * FROM sale where price not between 50000 and 100000;
SELECT * FROM sale where year = 2024;
SELECT * FROM sale where year = 2024 and month = 2;
SELECT * FROM sale where month in (1,2);

--2) 정렬과 제한
SELECT * FROM sale order by price; --order by는 기본적으로 asc
SELECT * FROM sale order by price asc;
SELECT * FROM sale order by price desc;

SELECT * FROM emp order by name;
SELECT * FROM emp order by name desc;
SELECT * FROM emp order by regdate asc;

SELECT * FROM sale WHERE price > 50000 order by price desc;
SELECT * FROM sale WHERE price > 50000 order by year,month,price desc;

SELECT * FROM sale FETCH FIRST 3 ROW ONLY; --위아래 같은 기능
SELECT * FROM sale OFFSET 0 ROWS FETCH NEXT 3 ROWS ONLY; --인덱스0부터 3개

select * from sale offset 1 rows fetch next 2 rows only; --인덱스1부터 2개
select * from sale offset 5 rows fetch next 3 rows only; --인덱스5부터 3개
select * from sale order by price desc offset 3 rows fetch next 5 rows only;
select * from sale where sale < 50000 order by price desc fetch first 3 rows only;
select * from sale where price > 50000 order by year desc,month,price desc fetch first 5 rows only;

--3) 중복제거와 별칭
select distinct depno from emp;
select distinct job,depno from emp;

select empno as 사번,name as 이름,gender as 성별 from emp;
select empno e,name n,gender g from emp;

--) SQL숫자함수
select sum(price) as 합계 from sale;
select avg(price) as 평균 from sale;
select max(price) as "최대값" from sale;
select min(price) as "최소값" from sale;
select count(*) as 직원수 from emp;
select count(job) as "정직원 수" from emp;
select count(empno) as 직원수 from emp;
select count(depno) as 부서수 from emp;

select ceil(1.2) from dual;
select ceil(1.8) from dual;
select floor(1.2) from dual;
select floor(1.8) from dual;
select round(1.2) from dual;
select round(1.8) from dual;

select DBMS_RANDOM.value from dual;
select ceil(DBMS_RANDOM.value * 10) from dual;

--2) SQL문자함수
select 'Hello ORACLE!',length('Hello ORACLE!') from dual;

select 
    'HELLO ORACLE!',
    substr('HELLO ORACLE!',1,3), --1~3
    substr('HELLO ORACLE!',3,2),--3부터 2개
    substr('HELLO ORACLE!',5) --5부터 끝까지
from dual;

select 
    instr('HELLO ORACLE!','L') as instr_1,
    instr('HELLO ORACLE!','L',-1) as instr_2 --'L',-1이므로 뒤에서 첫번째
from dual;
    
select '010-1234-5678',replace('010-1234-5678','-','') from dual;

select LPAD('Oracle',10,'#') as lpad,rpad('Oracle',10,'*') as rpad from dual;

select concat(empno,name) from emp where name = '이순신';
select empno || name from emp where name = '정약용';

select '[ _Oracle_ ]' as before, '[' || trim('_Oracle_') || ']' as trim from dual;

//3) SQL날짜함수, sysdate: 오라클에서 현재 날짜시간을 구하는 오라클이 내장 컬럼    
SELECT 
    SYSDATE, 
    SYSDATE - 1, 
    SYSDATE + 1 
FROM DUAL;

--4) SQL기타함수
select 
    to_char(sysdate,'YYYY') as YYYY,
    to_char(sysdate,'MM') as MM,
    to_char(sysdate,'DD') as DD,
    to_char(sysdate,'HH24') as HH24,
    to_char(sysdate,'MI') as MI,
    to_char(sysdate,'SS') as SS,
    to_char(sysdate,'YYYY/MM/DD HH24:MI:SS') as 날짜시간
from dual;

insert into emp values(1011,'안중근','M','부장',30,to_char(sysdate,'YYYY/MM/DD'));

select 
    to_date('20250714','YYYY/MM/DD') as 날짜1,
    to_date('250714','YY/MM/DD') as 날짜2,
    to_date(SYSDATE,'YYYY-MM-DD HH24:MI:SS') as 날짜시간
from dual;

INSERT INTO EMP VALUES (1012, '유관순', 'F', '차장', 20, SYSDATE);

--1)GROUP BY
select empno from sale group by empno;
select year from sale group by year;
select empno,year from sale group by empno,year;
select empno,count(*) from sale group by empno;
select empno,sum(price) as 합계 from sale group by empno;
select empno,avg(price) as 평균 from sale group by empno;

select empno,year,sum(price) as 합계 from sale group by empno,year;
select empno,year,sum(price) as 합계 from sale group by empno,year order by year asc,합계 desc;
select empno,year,sum(price) as 합계 from sale 
    where price >= 50000 group by empno,year order by 합계 desc;
    
-- 2)HAVING
select empno,sum(price) as 합계 from sale group by empno having sum(price) >= 200000;
select empno,year,sum(price) as 합계 from sale where price >= 100000 group by empno,year having sum(price) >= 200000 order by 합계 desc;

--1)UNION
select empno,month,price from sale where year=2023
union
select empno,month,price from sale where year=2024;

select empno,month,price from sale where year=2023
union all
select empno,month,price from sale where year=2024;

select empno,year,sum(price) as 합계 from sale
where year = 2023 group by empno,year
union
select empno,year,sum(price) as 합계 from sale
where year = 2024 group by empno,year order by year asc,합계 desc;

--2) INTERSECT
select empno from sale where year=2023
intersect
select empno from sale where year=2024;

-- 3)MINUS
select empno from sale where year=2023
minus
select empno from sale where year=2024;

--1)내부조인(INNER JOIN)
select * from emp e join dept d on e.depno = d.deptno;

select * from emp e join dept d using (deptno); --조인하려는 두 테이블의 동일한 컬럼명

select * from emp e,dept d where e.depno = d.deptno;

select 
    s.no,
    s.empno,
    e.name,
    e.job,
    e.regdate,
    e.depno,
    d.dname
from sale s
join emp e on s.empno = e.empno
join dept d on e.depno = d.deptno
where price > 100000 and year = 2024
order by s.price desc;

-- 2)외부조인(OUTER JOIN)
select * from sale s
    left join emp e on s.empno = e.empno; --left outer join 왼쪽 테이블과 공통되는 부분.위아래 같은 기능
select * from sale s,emp e where s.empno = e.empno(+);

select * from sale s
    right join emp e on s.empno = e.empno; --right outer join 오른쪽 테이블과 공통되는 부분.위아래 같은 기능
select * from sale s,emp e where s.empno(+) = e.empno;